// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       String @unique @id @default(cuid())
  username String @unique
  password String
  avatarId String?
  type     String
  spaces  Space[]
  avatar  Avatar? @relation(fields: [avatarId],references: [id])
}

model Avatar {
  id       String @unique @id @default(cuid())
  imageUrl String?
  name     String?
  users    User[]
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int
  thumbnail String?
  mapId     String?
  owner     User @relation(fields: [ownerId], references: [id])
  ownerId   String
  elements  spaceElements []
}

model spaceElements {
  id        String @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  space     Space @relation(fields: [spaceId],references: [id])
  element   Element@relation(fields: [elementId],references: [id])
}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageUrl String
  isStatic Boolean
  spaces   spaceElements[]
  maps     MapElements[]
}

model Map {
  id        String  @id @unique @default(cuid())
  thumbnail String
  name      String?
  width     Int
  height    Int
  elements  MapElements[]
}

model MapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int?
  y         Int?
  map       Map @relation(fields: [mapId],references: [id])
  element   Element@relation(fields: [elementId],references: [id])
} 